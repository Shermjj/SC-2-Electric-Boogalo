% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{parallel_ridge_cross_validation}
\alias{parallel_ridge_cross_validation}
\title{Perform Cross-Validation for Ridge Regression with Fourier Transform Features}
\usage{
parallel_ridge_cross_validation(
  x_vars,
  y_var,
  time_counter,
  daily_period,
  annual_period,
  max_K,
  lambda_values,
  n_folds
)
}
\arguments{
\item{x_vars}{Numeric matrix of predictor variables.}

\item{y_var}{Numeric vector of response variable.}

\item{time_counter}{Numeric vector representing time points for generating Fourier terms.}

\item{daily_period}{Double specifying the period for daily Fourier terms.}

\item{annual_period}{Double specifying the period for annual Fourier terms.}

\item{max_K}{Integer specifying the maximum number of harmonics to consider.}

\item{lambda_values}{Vector of doubles representing different lambda values for ridge penalty.}

\item{n_folds}{Integer specifying the number of folds for cross-validation.}
}
\value{
A list containing the optimal number of harmonics (`best_K`), the optimal lambda value (`best_lambda`),
        the mean squared error results for each model configuration (`mse_results`), and the final model trained on the entire dataset (`final_model`).
}
\description{
This function performs k-fold cross-validation for ridge regression models on a dataset
with options to include Fourier transform features for both daily and annual periodic components.
It leverages parallel computation to efficiently handle large datasets and multiple model configurations.
}
\details{
The function first generates Fourier terms for daily and annual periods up to the maximum number of harmonics specified by `max_K`.
It then evaluates the performance of ridge regression models across different combinations of lambda values and number of harmonics
using the specified number of folds for cross-validation.
The function identifies the best performing model configuration in terms of mean squared error and uses it to train a final model on the entire dataset.
This final model and its parameters are returned as part of the results list.
}
\examples{
\dontrun{
x_vars <- matrix(rnorm(1000), ncol = 10)
y_var <- rnorm(100)
time_counter <- seq(1, 100, by = 1)
results <- parallel_ridge_cross_validation(x_vars, y_var, time_counter, 1, 365, 5, c(0.1, 1, 10), 10)
print(results$best_lambda)
print(results$best_K)
print(results$mse_results)
print(results$final_model)
}
}
